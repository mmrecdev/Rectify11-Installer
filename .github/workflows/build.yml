name: Rectify11

on:
  push:
    branches: [ main ] # Updated to 'main' (modern convention)
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["Submodules Sync"]
    types:
      - completed
  workflow_dispatch: # Added manual trigger

jobs:
  build:
    runs-on: windows-latest
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2 # Updated to latest version
      with:
        msbuild-architecture: x64 # Explicitly set for consistency

    # Step 3: Restore NuGet Packages
    - name: Restore NuGet Packages
      run: |
        nuget restore Rectify11Installer.sln
        nuget restore RectifyControlPanel2\rectify11cpl.sln

    # Step 4: Build Rectify Control Panel
    - name: Build Rectify Control Panel
      run: msbuild RectifyControlPanel2\rectify11cpl.sln /p:Configuration=Release /p:Platform=x64

    # Step 5: Build Rectify11 Installer
    - name: Build Rectify11 Installer
      run: msbuild Rectify11Installer.sln /p:Configuration=Release /p:Platform=x64

    # Step 6: Create single executable with ILRepack
    - name: Create Single Executable
      run: |
        .\Rectify11Installer\ILRepack.exe `
          .\Rectify11Installer\bin\Release\Rectify11Installer.exe `
          /out:.\Rectify11Installer\bin\output\Release\Rectify11Installer.exe `
          .\Rectify11Installer\bin\Release\libmsstyle.dll `
          .\Rectify11Installer\bin\Release\TaskDialog.dll
        if ($LASTEXITCODE -ne 0) {
          Write-Error "ILRepack failed!"
          exit 1
        }

    # Step 7: Upload Rectify11 Installer artifact
    - name: Upload Rectify11 Installer
      uses: actions/upload-artifact@v4 # Updated to latest version
      with:
        name: Rectify11Installer (x64)
        path: .\Rectify11Installer\bin\output\Release\Rectify11Installer.exe
        if-no-files-found: error # Fail if artifact is missing
