name: mros

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["Submodules Sync"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      NUGET_CERT_REVOCATION_MODE: offline
    steps:
    # Step 1: Single checkout with submodules (includes RectifyControlPanel2 and dui70)
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        submodules: recursive # Fetches RectifyControlPanel2 and its dui70 submodule
        lfs: true

    # Step 2: Validate project structure
    - name: Validate Project Structure
      run: |
        if (!(Test-Path -Path "mrosInstaller\mrosInstaller.sln")) {
          Write-Error "mrosInstaller.sln not found!"
          exit 1
        }
        if (!(Test-Path -Path "RectifyControlPanel2\rectify11cpl.sln")) {
          Write-Error "rectify11cpl.sln not found in RectifyControlPanel2!"
          exit 1
        }
        Write-Output "Project structure validated."

    # Step 3: Validate system DLLs for theming
    - name: Validate System DLLs for Theming
      run: |
        $shell32Path = "C:\Windows\System32\shell32.dll"
        $imageresPath = "C:\Windows\System32\imageres.dll"
        if (!(Test-Path -Path $shell32Path)) {
          Write-Error "shell32.dll not found!"
          exit 1
        }
        if (!(Test-Path -Path $imageresPath)) {
          Write-Error "imageres.dll not found!"
          exit 1
        }
        Write-Output "System DLLs (shell32.dll, imageres.dll) validated for icon extraction."

    # Step 4: Add MSBuild to PATH
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    # Step 5: Restore NuGet Packages
    - name: Restore NuGet Packages
      run: |
        nuget restore mrosInstaller.sln
        nuget restore RectifyControlPanel2\rectify11cpl.sln

    # Step 6: Build Rectify Control Panel
    - name: Build Rectify Control Panel
      run: msbuild RectifyControlPanel2\rectify11cpl.sln /p:Configuration=Release /p:Platform=x64

    # Step 7: Build mros Installer
    - name: Build mros Installer
      run: msbuild mrosInstaller.sln /p:Configuration=Release /p:Platform=x64

    # Step 8: Create single executable with ILRepack
    - name: Create Single Executable
      run: |
        .\mrosInstaller\ILRepack.exe `
          .\mrosInstaller\bin\Release\mrosInstaller.exe `
          /out:.\mrosInstaller\bin\output\Release\mrosInstaller.exe `
          .\mrosInstaller\bin\Release\libmsstyle.dll `
          .\mrosInstaller\bin\Release\TaskDialog.dll
        if ($LASTEXITCODE -ne 0) {
          Write-Error "ILRepack failed!"
          exit 1
        }

    # Step 9: Upload mros Installer artifact
    - name: Upload mros Installer
      uses: actions/upload-artifact@v4
      with:
        name: mrosInstaller (x64)
        path: .\mrosInstaller\bin\output\Release\mrosInstaller.exe
        if-no-files-found: error
